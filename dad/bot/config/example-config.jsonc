{
  "nick": ["nick", "backupnick", "backupnick2"],
  "variables": {
    // collection of common regex statements used in the config
    // used in response by prepending a "$" to the name (per RE2)
    "nick": { // regex variables should be surrounded by "#",
      "description": ["captures any matches for the name"],
      "pattern": "(?P<nick>\b((pa){1,2}|dad)\b)"  // regex used to capture the variable. See https://github.com/google/re2/wiki/Syntax for how to define named submatches
    }
  },
  "commands": [
    {
      "regex": [
        {
          "pattern": "(some capture text)end of regex",
          "include": ["nick"]  // list of variables that must also be matched. Each pattern must match a unique subset of the string being tested
        }
      ],
      "permissions": [
        "user"
      ],
      "responses": [
        {
          "response": ["okay, I changed the topic to $1"], // Use the submatches in responses...
          "actions": [
            {
              "action": "topic",
              "parameters": ["$1"] // And in parameters.
            }
          ]
        }
      ]
    },
    {
      "regex": [
        {
          "pattern": "(/d+)",
          "include": [] // can be blank or absent
        }
      ],
      "permissions": [], // no/empty permissions should assume anyone can use
      "responses": [
        {
          // keys wrapped in "<>" could be from a list of simple words (<word> could be defined as a json array or random lines to choose from... or maybe some go code could somehow be injected into a function that processes what this should be) or reserved words (<user> could be handled in a function that processes the IRC message)
          "response": ["<user> counted $1 <word>, ah ah ah..."]
        }
      ]
    }
  ]
}
